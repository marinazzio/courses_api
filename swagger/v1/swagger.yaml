---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/authors":
    get:
      summary: Retrieves all authors
      tags:
      - Authors
      responses:
        '200':
          description: authors found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
    post:
      summary: Creates an author
      tags:
      - Authors
      parameters: []
      responses:
        '201':
          description: author created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/authors/{id}":
    get:
      summary: Retrieves an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: author found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - name
                - created_at
                - updated_at
        '404':
          description: author not found
    put:
      summary: Updates an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: author updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: Deletes an author
      tags:
      - Authors
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: author deleted
        '404':
          description: author not found
  "/competences":
    get:
      summary: Retrieves all competences
      tags:
      - Competences
      responses:
        '200':
          description: competences found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
    post:
      summary: Creates a competence
      tags:
      - Competences
      parameters: []
      responses:
        '201':
          description: competence created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/competences/{id}":
    get:
      summary: Retrieves a competence
      tags:
      - Competences
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: competence found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - name
                - created_at
                - updated_at
        '404':
          description: competence not found
    put:
      summary: Updates a competence
      tags:
      - Competences
      parameters: []
      responses:
        '200':
          description: competence updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: Deletes a competence
      tags:
      - Competences
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: competence deleted
        '404':
          description: competence not found
  "/courses":
    get:
      summary: Retrieves all courses
      tags:
      - Courses
      responses:
        '200':
          description: courses found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                  required:
                  - id
                  - name
                  - created_at
                  - updated_at
    post:
      summary: Creates a course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: course created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/courses/{id}":
    get:
      summary: Retrieves a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: course found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                required:
                - id
                - name
                - created_at
                - updated_at
        '404':
          description: course not found
    put:
      summary: Updates a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: course updated
        '404':
          description: course not found
        '422':
          description: invalid request
    delete:
      summary: Deletes a course
      tags:
      - Courses
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: course deleted
        '404':
          description: course not found
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
